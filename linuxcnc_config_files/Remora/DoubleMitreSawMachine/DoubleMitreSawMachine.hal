# core HAL config file for simulation

# first load all the RT modules that will be needed
# kinematics
loadrt [KINS]KINEMATICS
#autoconverted  trivkins
# motion controller, get name and thread periods from ini file
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS unlock_joints_mask=0x01 

loadrt smc                  names=j0.smc   
loadrt and2                 count=1
loadrt not                  count=2
loadrt sim_axis_hardware    names=sim-hardware
loadrt cut_state_machine    list_buffer_size=1000
loadrt streamer             depth=100,20 cfg=FFFFFUU,FFUFU
loadrt remora-eth-3.0       PRU_base_freq=40000 ctrl_type=v
loadrt PRUencoder           names=j0.enc
loadrt pid                  names=j0.pid
loadrt ddt                  names=j0.ddt

setp j0.smc.home                        [JOINT_0]HOME
setp j0.smc.min                         [AXIS_X]MIN_LIMIT
setp j0.smc.max                         [AXIS_X]MAX_LIMIT

setp sim-hardware.Xmaxsw-upper          5000
setp sim-hardware.Xmaxsw-lower          [AXIS_X]MAX_LIMIT
setp sim-hardware.Xminsw-upper          [AXIS_X]MIN_LIMIT
setp sim-hardware.Xminsw-lower          -1000
setp sim-hardware.Xhomesw-pos           [AXIS_X]MIN_LIMIT
setp sim-hardware.Xhomesw-hyst          20

setp cut_sm.min-limit                   [AXIS_X]MIN_LIMIT
setp cut_sm.max-limit                   [AXIS_X]MAX_LIMIT
setp cut_sm.maxa                        [JOINT_0]MAX_ACCELERATION
setp cut_sm.maxv                        [JOINT_0]MAX_VELOCITY
setp cut_sm.dmin-percent                [MACHINE_FEATURES]D_MIN_PERCENT

setp cut_sm.ferror                      [MACHINE_FEATURES]ERROR_MARGIN
setp cut_sm.angle-head-type-actuator    [MACHINE_FEATURES]ANGLE_HEAD_TYPE_ACTUATOR
setp cut_sm.min-cut-top-position        [MACHINE_FEATURES]MIN_CUT_TOP_POSITION
setp cut_sm.disc-thickness              [MACHINE_FEATURES]DISC_THICKNESS


setp cut_sm.clamps-btn-both 0
setp cut_sm.clamps-btn-in-edge 0
setp cut_sm.clamps-btn-out-width-pulses 1

setp cut_sm.busy-hand-btns-both 0
setp cut_sm.busy-hand-btns-in-edge 0
setp cut_sm.busy-hand-btns-out-width-pulses 1

setp remora.joint.0.scale 		    [JOINT_0]SCALE
setp remora.joint.0.maxaccel 	    [JOINT_0]MAX_ACCELERATION
setp remora.joint.0.pgain		    [JOINT_0]PGAIN

setp j0.enc.position-scale	        [JOINT_0]ENCODER_SCALE

setp j0.pid.maxoutput 98

setp j0.pid.Pgain                   [JOINT_0]P
setp j0.pid.Igain                   [JOINT_0]I
setp j0.pid.Dgain                   [JOINT_0]D
setp j0.pid.bias                    [JOINT_0]BIAS
setp j0.pid.FF0                     [JOINT_0]FF0
setp j0.pid.FF1                     [JOINT_0]FF1
setp j0.pid.FF2                     [JOINT_0]FF2
setp j0.pid.deadband     		    [JOINT_0]DEADBAND

# add motion controller functions to servo thread
addf motion-command-handler                 servo-thread
addf motion-controller                      servo-thread
addf j0.smc                                 servo-thread
addf sim-hardware.update                    servo-thread
addf cut_sm.update-cut-sm                   servo-thread
addf cut_sm.edges-detection-update          servo-thread
#addf cut_sm.add-cut-to-list                servo-thread
#addf cut_sm.clear-cut-list                 servo-thread
addf cut_sm.print-list                      servo-thread
addf cut_sm.update-cut-list                 servo-thread
addf cut_sm.update-step-slide-cut-list      servo-thread
addf and2.0                                 servo-thread
addf not.0                                  servo-thread
addf not.1                                  servo-thread
addf streamer.0                             servo-thread
addf streamer.1                             servo-thread
addf remora.read 		                    servo-thread
addf remora.update-freq 	                servo-thread
addf remora.write 		                    servo-thread
addf PRUencoder.capture-position            servo-thread
addf j0.pid.do-pid-calcs                    servo-thread
addf j0.ddt                                 servo-thread

# create HAL signals for position commands from motion module
# loop position commands back to motion module feedback
net  j0_pos_cmd             joint.0.motor-pos-cmd   =>  j0.pid.command 
net  j0_pos_fb              j0.enc.position         =>  j0.pid.feedback  joint.0.motor-pos-fb sim-hardware.Xcurrent-pos j0.ddt.in
net  j0_vel_cmd             j0.pid.output           =>  remora.joint.0.vel-cmd

net  j0_in                  cut_sm.move-to-length   =>  j0.smc.in
net  j0_vel                 cut_sm.vel-to-move      =>  j0.smc.maxv
net  j0_acc                 cut_sm.acc-to-move      =>  j0.smc.maxa

net  j0_out                 j0.smc.out              =>  joint.0.posthome-cmd
net  j0_en_homed            joint.0.homed           =>  and2.0.in0 
net  j0_en_feed_inhibit     cut_sm.feed-inhibit     =>  and2.0.in1
net  j0_en                  and2.0.out              =>  j0.smc.enable
net  j0_amp_enable          joint.0.amp-enable-out  =>  remora.joint.0.enable j0.pid.enable not.1.in

# Remora Process Value (PV) feedbacks
# link the encoder PV to the config.txt

net  j0-enc-count           j0.enc.raw_count <= remora.PV.0

net stop_move               =>  cut_sm.stop-move
net clamps_btn              => cut_sm.clamps-button

net j0home  joint.0.home-sw-in  => sim-hardware.Xhomesw-out
net j0homing  joint.0.homing    => sim-hardware.Xhoming cut_sm.homing j0.smc.homing

# estop loopback REMORA
net user-enable-out		<= iocontrol.0.user-enable-out		=> remora.enable cut_sm.estop
net user-request-enable <= iocontrol.0.user-request-enable	=> remora.reset
net remora-status 		<= remora.status 				=> iocontrol.0.emc-enable-in

# estop loopback SIM
#net estop-loop iocontrol.0.user-enable-out iocontrol.0.emc-enable-in cut_sm.estop

